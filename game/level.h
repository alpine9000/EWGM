#ifndef LEVEL_H
#define LEVEL_H

#define MAPOBJECT_ITEM_FLAG                0x8000
#define MAPOBJECT_TOP_RENDER_ENEMY_FLAG    0x4000
#define MAPOBJECT_BOTTOM_RENDER_ENEMY_FLAG 0x2000
#define MAPOBJECT_COIN                     (MAPOBJECT_ITEM_FLAG | ITEM_ANIM_COIN)
#define MAPOBJECT_JETPACK                  (MAPOBJECT_ITEM_FLAG | ITEM_ANIM_JETPACK)

#define MAPOBJECT_TOP_RENDER_LEFT_RUN     (MAPOBJECT_TOP_RENDER_ENEMY_FLAG | ENEMY_ANIM_LEFT_RUN)
#define MAPOBJECT_BOTTOM_RENDER_LEFT_RUN   (MAPOBJECT_BOTTOM_RENDER_ENEMY_FLAG | ENEMY_ANIM_LEFT_RUN)

#define MAPOBJECT_TOP_RENDER_RIGHT_RUN     (MAPOBJECT_TOP_RENDER_ENEMY_FLAG | ENEMY_ANIM_RIGHT_RUN)
#define MAPOBJECT_BOTTOM_RENDER_RIGHT_RUN   (MAPOBJECT_BOTTOM_RENDER_ENEMY_FLAG | ENEMY_ANIM_RIGHT_RUN)

#define MAPOBJECT_TOP_RENDER_LEFT_SKATE     (MAPOBJECT_TOP_RENDER_ENEMY_FLAG | ENEMY_ANIM_LEFT_SKATE)
#define MAPOBJECT_BOTTOM_RENDER_LEFT_SKATE   (MAPOBJECT_BOTTOM_RENDER_ENEMY_FLAG | ENEMY_ANIM_LEFT_SKATE)

#define MAPOBJECT_TOP_RENDER_RIGHT_SKATE     (MAPOBJECT_TOP_RENDER_ENEMY_FLAG | ENEMY_ANIM_RIGHT_SKATE)
#define MAPOBJECT_BOTTOM_RENDER_RIGHT_SKATE   (MAPOBJECT_BOTTOM_RENDER_ENEMY_FLAG | ENEMY_ANIM_RIGHT_SKATE)

#define MAPOBJECT_TOP_RENDER_RIGHT_DRAGON (MAPOBJECT_TOP_RENDER_ENEMY_FLAG | ENEMY_ANIM_RIGHT_DRAGON)
#define MAPOBJECT_BOTTOM_RENDER_RIGHT_DRAGON (MAPOBJECT_BOTTOM_RENDER_ENEMY_FLAG | ENEMY_ANIM_RIGHT_DRAGON)


#define LEVEL_NUM_LEVELS 1

typedef struct {
  uint16_t tileAddresses[MAP_TILE_WIDTH][MAP_TILE_HEIGHT];
  uint16_t item_spriteIds[MAP_TILE_WIDTH][MAP_TILE_HEIGHT];
  uint8_t spriteBitplanes[SPRITE_SHEET_WIDTH_BYTES*SCREEN_BIT_DEPTH*SPRITE_SHEET_HEIGHT];
  uint8_t spriteMask[SPRITE_SHEET_WIDTH_BYTES*SCREEN_BIT_DEPTH*SPRITE_SHEET_HEIGHT];
  uint8_t tileBitplanes[TILE_SHEET_WIDTH_BYTES*SCREEN_BIT_DEPTH*TILE_SHEET_HEIGHT];
  uint16_t fadeIn[PALETTE_FADE_IN_SIZE];
  uint16_t clouds;
  uint16_t moduleIndex;
#ifdef GAME_RECORDING
  uint8_t recordData[sizeof(record_t)];
  record_t* record;
#endif
  void (*initFunctor)(void);
  void (*effectFunctor)(frame_buffer_t fb);
} level_t DISK_SECTOR_ALIGN;

extern level_t level;

void
level_load(uint16_t index);

#endif
